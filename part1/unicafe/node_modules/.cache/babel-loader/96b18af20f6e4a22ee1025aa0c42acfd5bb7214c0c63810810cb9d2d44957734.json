{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kerkk\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\FullStack\\\\FullStack\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    click,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: click,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n_c = Button;\nconst Average = {\n  good,\n  neutral,\n  bad\n};\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const positive = () => setGood(good + 1);\n  const negative = () => setBad(bad + 1);\n  const middle = () => setNeutral(neutral + 1);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      click: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      click: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      click: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), \"good \", good, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this), \" neutral \", neutral, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 44\n    }, this), \" bad \", bad, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 61\n    }, this), \"all \", good + bad + neutral]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","_ref","click","text","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Average","good","neutral","bad","App","_s","setGood","setNeutral","setBad","positive","negative","middle","_c2","$RefreshReg$"],"sources":["C:/Users/kerkk/OneDrive/Työpöytä/FullStack/FullStack/part1/unicafe/src/App.js"],"sourcesContent":["\nimport { useState } from 'react'\n\nconst Button = ({click, text}) => (\n  <button onClick={click}>{text}</button>\n)\n\nconst Average = ({good, neutral, bad})\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const positive = () => setGood(good + 1)\n  const negative = () => setBad(bad + 1)\n  const middle = () => setNeutral(neutral + 1)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button click={() => setGood(good + 1)} text = 'good' />\n      <Button click={() => setNeutral(neutral + 1)} text = 'neutral' />\n      <Button click={() => setBad(bad + 1)} text = 'bad' />\n      <h1>statistics</h1>\n      good {good} <br /> neutral {neutral} <br /> bad {bad} <br />\n      all {good + bad + neutral}\n\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AACA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,MAAM,GAAGC,IAAA;EAAA,IAAC;IAACC,KAAK;IAAEC;EAAI,CAAC,GAAAF,IAAA;EAAA,oBAC3BF,OAAA;IAAQK,OAAO,EAAEF,KAAM;IAAAG,QAAA,EAAEF;EAAI;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAU;AAAA,CACxC;AAAAC,EAAA,GAFKV,MAAM;AAIZ,MAAMW,OAAO,GAAI;EAACC,IAAI;EAAEC,OAAO;EAAEC;AAAG,CAAE;AAEtC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACJ,IAAI,EAAEK,OAAO,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACgB,OAAO,EAAEK,UAAU,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACiB,GAAG,EAAEK,MAAM,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMuB,QAAQ,GAAGA,CAAA,KAAMH,OAAO,CAACL,IAAI,GAAG,CAAC,CAAC;EACxC,MAAMS,QAAQ,GAAGA,CAAA,KAAMF,MAAM,CAACL,GAAG,GAAG,CAAC,CAAC;EACtC,MAAMQ,MAAM,GAAGA,CAAA,KAAMJ,UAAU,CAACL,OAAO,GAAG,CAAC,CAAC;EAE5C,oBACEd,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtBV,OAAA,CAACC,MAAM;MAACE,KAAK,EAAEA,CAAA,KAAMe,OAAO,CAACL,IAAI,GAAG,CAAC,CAAE;MAACT,IAAI,EAAG;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACxDV,OAAA,CAACC,MAAM;MAACE,KAAK,EAAEA,CAAA,KAAMgB,UAAU,CAACL,OAAO,GAAG,CAAC,CAAE;MAACV,IAAI,EAAG;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACjEV,OAAA,CAACC,MAAM;MAACE,KAAK,EAAEA,CAAA,KAAMiB,MAAM,CAACL,GAAG,GAAG,CAAC,CAAE;MAACX,IAAI,EAAG;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACrDV,OAAA;MAAAM,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,SACd,EAACG,IAAI,EAAC,GAAC,eAAAb,OAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,aAAS,EAACI,OAAO,EAAC,GAAC,eAAAd,OAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,SAAK,EAACK,GAAG,EAAC,GAAC,eAAAf,OAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,QACxD,EAACG,IAAI,GAAGE,GAAG,GAAGD,OAAO;EAAA;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAErB;AAEV,CAAC;AAAAO,EAAA,CAtBKD,GAAG;AAAAQ,GAAA,GAAHR,GAAG;AAwBT,eAAeA,GAAG;AAAA,IAAAL,EAAA,EAAAa,GAAA;AAAAC,YAAA,CAAAd,EAAA;AAAAc,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}