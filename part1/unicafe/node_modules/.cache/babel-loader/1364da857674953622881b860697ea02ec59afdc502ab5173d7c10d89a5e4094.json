{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kerkk\\\\OneDrive\\\\Ty\\xF6p\\xF6yt\\xE4\\\\FullStack\\\\FullStack\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    click,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: click,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n_c = Button;\nconst Average = _ref2 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref2;\n  let unit;\n  if (good + bad + neutral === 0) unit = 0;else unit = 1 / (good + neutral + bad);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"average \", unit * good - unit * bad]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 11\n  }, this);\n};\n_c2 = Average;\nconst Positive = _ref3 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref3;\n  const all = good + bad + neutral;\n  if (all === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"positive 0 %\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"positive \", good / all * 100, \" %\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 11\n  }, this);\n};\n_c3 = Positive;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      click: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      click: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      click: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \"good \", good, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), \"neutral \", neutral, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }, this), \"bad \", bad, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), \"all \", good + bad + neutral, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(Average, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Positive, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Average\");\n$RefreshReg$(_c3, \"Positive\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","_ref","click","text","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Average","_ref2","good","neutral","bad","unit","_c2","Positive","_ref3","all","_c3","App","_s","setGood","setNeutral","setBad","_c4","$RefreshReg$"],"sources":["C:/Users/kerkk/OneDrive/Työpöytä/FullStack/FullStack/part1/unicafe/src/App.js"],"sourcesContent":["\nimport { useState } from 'react'\n\nconst Button = ({click, text}) => (\n  <button onClick={click}>{text}</button>\n)\n\nconst Average = ({good, neutral, bad}) => {\n  let unit\n  if (good + bad + neutral === 0)\n    unit = 0\n  else\n    unit = 1 / (good + neutral + bad)\n  return (<div>average {unit * good - unit * bad}</div>)\n}\n\nconst Positive = ({good, neutral, bad}) => {\n  const all = good + bad + neutral\n  if (all === 0)\n    return (<div>positive 0 %</div>)\n  return (<div>positive {good / all * 100} %</div>)\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button click={() => setGood(good + 1)} text = 'good' />\n      <Button click={() => setNeutral(neutral + 1)} text = 'neutral' />\n      <Button click={() => setBad(bad + 1)} text = 'bad' />\n      <h1>statistics</h1>\n      good {good} <br />\n      neutral {neutral} <br />\n      bad {bad} <br />\n      all {good + bad + neutral} <br />\n      <Average good = {good} neutral = {neutral} bad = {bad} />\n      <Positive good = {good} neutral = {neutral} bad = {bad} />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}